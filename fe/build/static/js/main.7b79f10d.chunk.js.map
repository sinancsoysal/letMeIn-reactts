{"version":3,"sources":["logo.png","Login.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","width","marginTop","spacing","paper","background","margin","borderRadius","Alert","props","elevation","variant","Login","data","React","useState","formOpen","formSetOpen","handleFormClose","useForm","handleSubmit","register","onSubmit","toUpdate","axios","post","id","mail","pass","auth","username","password","catch","err","failSetOpen","successSetOpen","failOpen","successOpen","handleClose","event","reason","copySetOpen","deleteOpen","deleteSetOpen","handleDialogClose","copyOpen","classes","Paper","className","Grid","container","item","xs","Typography","gutterBottom","url","Tooltip","title","onClick","placement","IconButton","aria-label","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","TextField","inputRef","label","type","name","value","fullWidth","selBox","document","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","Snackbar","autoHideDuration","severity","appbar","textAlign","justifyContent","alignItems","logo","maxHeight","maxWidth","fab","fixed","bottom","right","ul","padding","listStyle","dialog","makeStrongPassword","outString","inOptions","i","charAt","Math","floor","random","length","App","loginsList","setLoginsList","useEffect","get","then","response","json","localStorage","setItem","JSON","stringify","collection","getItem","parse","console","log","newLogin","a","window","location","reload","AppBar","src","alt","Container","map","login","Fab","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7b79f10d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c412dc91.png\";","import React from 'react'\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\n\nimport { Button, createStyles, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, Grid, IconButton, makeStyles, Paper, Snackbar, TextField, Theme, Tooltip, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\n\ninterface LoginProps {\n  data: {\n    id: number,\n    url: string,\n    mail: string,\n    pass: string,\n  }\n}\n\ninterface FormData {\n  mail: string,\n  pass: string,\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    paper: {\n      background: 'linear-gradient(45deg, #ff499e 30%, #49b6ff 90%)',\n      margin: theme.spacing(1),\n      borderRadius: 16,\n    },\n\n  }),\n);\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport const Login: React.FC<LoginProps> = ({ data }) => {\n  // form\n  const [formOpen, formSetOpen] = React.useState(false);\n  const handleClickFormOpen = () => {\n    formSetOpen(true);\n  };\n  const handleFormClose = () => {\n    formSetOpen(false);\n  };\n  const { handleSubmit, register } = useForm<FormData>();\n  const onSubmit = handleSubmit((toUpdate) => {\n    axios.post('http://192.168.1.102:8080/api/update', { id: data.id, mail: toUpdate.mail, pass: toUpdate.pass }, {\n      // Axios looks for the `auth` option, and, if it is set, formats a\n      // basic auth header for you automatically.\n      auth: {\n        username: 'greatnani',\n        password: 'NV@2VmTjr&Jx'\n      }\n    })\n      .catch(err => {\n        failSetOpen(true);\n      });\n\n    formSetOpen(false);\n    successSetOpen(true);\n  });\n  const [failOpen, failSetOpen] = React.useState(false);\n  const [successOpen, successSetOpen] = React.useState(false);\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    failSetOpen(false);\n    successSetOpen(false);\n    copySetOpen(false);\n  };\n\n  // delete\n  const[deleteOpen, deleteSetOpen] = React.useState(false);\n  const handleClickDialogOpen = () => {\n    deleteSetOpen(true);\n  };\n  const handleDialogClose = () => {\n    deleteSetOpen(false);\n  };\n  const handleDelete = () => {\n    axios.post('http://192.168.1.102:8080/api/delete', { id: data.id }, {\n      // Axios looks for the `auth` option, and, if it is set, formats a\n      // basic auth header for you automatically.\n      auth: {\n        username: 'greatnani',\n        password: 'NV@2VmTjr&Jx'\n      }\n    })\n      .catch(err => {\n        failSetOpen(true);\n      });\n    successSetOpen(true);\n    deleteSetOpen(false);\n  }\n\n  // copy\n  const [copyOpen, copySetOpen] = React.useState(false);\n  const handleCopy = () => {\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = data.pass;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n    copySetOpen(true);\n  }\n\n  const classes = useStyles();\n  return (\n    <li>\n      <Paper className={classes.paper}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Typography variant=\"h6\" gutterBottom>\n              {data.mail}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"subtitle1\">\n              {data.url}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Tooltip title=\"delete\" onClick={handleClickDialogOpen} placement=\"left\">\n              <IconButton aria-label=\"delete\">\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n            <Dialog\n              open={deleteOpen}\n              onClose={handleDialogClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"end this login's existence\"}</DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  you are going end this login's whole carrier; are you sure you want to continue?\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleDialogClose} color=\"primary\">\n                  forgive\n                </Button>\n                <Button onClick={handleDelete} color=\"primary\" autoFocus>\n                  finish what you started\n          </Button>\n              </DialogActions>\n            </Dialog>\n          </Grid>\n          <Grid item xs={4}>\n            <Tooltip title=\"edit\" onClick={handleClickFormOpen} placement=\"left\">\n              <IconButton aria-label=\"edit\">\n                <EditIcon />\n              </IconButton>\n            </Tooltip>\n            <Dialog open={formOpen} onClose={handleFormClose}>\n              <DialogTitle id=\"form-dialog-title\">edit login <br />({data.url})</DialogTitle>\n              <DialogContent>\n                <TextField inputRef={register} margin=\"dense\" id=\"mail\" label=\"mail\" type=\"email\" name=\"mail\" value={data.mail} fullWidth />\n                <TextField inputRef={register} margin=\"dense\" id=\"password\" label=\"password\" type=\"password\" name=\"pass\" value={data.pass} fullWidth />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleFormClose} color=\"primary\">\n                  cancel\n                </Button>\n                <Button onClick={onSubmit} color=\"primary\">\n                  update\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Grid>\n          <Grid item xs={4}>\n            <Tooltip title=\"copy\" onClick={handleCopy} placement=\"left\">\n              <IconButton aria-label=\"copy\">\n                <FileCopyIcon />\n              </IconButton>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Snackbar open={successOpen} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          action successfully completed!\n        </Alert>\n      </Snackbar>\n      <Snackbar open={failOpen} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"warning\">\n          an error occured while completing the action!\n        </Alert>\n      </Snackbar>\n      <Snackbar open={copyOpen} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          password copied to clipboard!\n        </Alert>\n      </Snackbar>\n    </li>\n  );\n}\n\n","import './App.css';\nimport logo from './logo.png';\nimport { Login } from './Login';\n\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { AppBar, Button, Container, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appbar: {\n      background: '#000',\n      textAlign: 'center',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    logo: {\n      maxHeight: 70,\n      maxWidth: 230,\n    },\n    fab: {\n      margin: theme.spacing(2),\n    },\n    fixed: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(3),\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    },\n    ul: {\n      padding: 0,\n      listStyle: 'none',\n    },\n    dialog: {\n      background: '#000',\n      color: '#fff'\n    }\n  }),\n);\n\ninterface FormData {\n  url: string,\n  mail: string,\n}\n\ninterface Login {\n  id: number,\n  url: string,\n  mail: string,\n  pass: string,\n}\n\nfunction makeStrongPassword() {\n  let outString: string = '';\n  let inOptions: string = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ!\"£$%^&*()_+=-[];#.:@~<>?-=';\n\n  for (let i = 0; i < 32; i++) {\n\n    outString += inOptions.charAt(Math.floor(Math.random() * inOptions.length));\n\n  }\n\n  return outString;\n}\n\nfunction App() {\n  const classes = useStyles();\n  const [loginsList, setLoginsList] = React.useState<Login[]>([]);\n\n  useEffect(() => {\n    axios.get<Login[]>('http://192.168.1.102:8080/api/logins', {\n\n      // Axios looks for the `auth` option, and, if it is set, formats a\n      // basic auth header for you automatically.\n      auth: {\n        username: 'greatnani',\n        password: 'NV@2VmTjr&Jx'\n      }\n    })\n      .then((response) => response.data)\n      .then((json) => {\n        setLoginsList(json)\n        localStorage.setItem(\"logins\", JSON.stringify(json))\n      })\n      .catch(err => {\n        let collection = localStorage.getItem(\"logins\");\n        setLoginsList(JSON.parse(collection || '{}'));\n        console.log('err')\n      })\n  }, []);\n\n  const [formOpen, formSetOpen] = React.useState(false);\n  const handleClickFormOpen = () => {\n    formSetOpen(true);\n  };\n  const handleFormClose = () => {\n    formSetOpen(false);\n  };\n  const { handleSubmit, register } = useForm<FormData>();\n  const onSubmit = handleSubmit(async (newLogin) => {\n\n    let password = makeStrongPassword();\n    await axios.post('http://192.168.1.102:8080/api/add', {\n      url: newLogin.url,\n      mail: newLogin.url,\n      pass: password,  \n    },\n    {\n      // Axios looks for the `auth` option, and, if it is set, formats a\n      // basic auth header for you automatically.\n      auth: {\n        username: 'greatnani',\n        password: 'NV@2VmTjr&Jx'\n      }\n    })\n      .catch(err => {\n        console.log(err);\n      });\n\n    formSetOpen(false);\n    window.location.reload();\n  });\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\" className={classes.appbar}>\n        <img src={logo} alt='logo' className={classes.logo} />\n      </AppBar>\n      <Container maxWidth=\"sm\">\n        <ul className={classes.ul}>\n          {\n            loginsList.map((login) => {\n              return (\n                <Login data={{ id: login.id, url: login.url, mail: login.mail, pass: login.pass }} />\n              )\n            })\n          }\n        </ul>\n      </Container>\n      <Fab aria-label=\"add\" className={classes.fixed} onClick={handleClickFormOpen}>\n        <AddIcon />\n      </Fab>\n      <Dialog open={formOpen} onClose={handleFormClose}>\n        <DialogTitle id=\"form-dialog-title\">add new login</DialogTitle>\n        <DialogContent>\n          <TextField inputRef={register} margin=\"dense\" id=\"url\" label=\"url\" name=\"url\" fullWidth />\n          <TextField inputRef={register} margin=\"dense\" id=\"mail\" label=\"mail\" type=\"email\" name=\"mail\" fullWidth />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleFormClose} color=\"primary\">\n            cancel\n          </Button>\n          <Button onClick={onSubmit} color=\"primary\">\n            add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}